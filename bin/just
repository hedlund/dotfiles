#!/bin/bash
set -euo pipefail

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
source "${SCRIPT_DIR}/../functions"

# Taks are defined in the "tasks" directory at the root of the directory
TASKS_DIR="${SCRIPT_DIR}/../tasks"

# Help function to list available tasks
function help() {
  if [ ! -d "$TASKS_DIR" ]; then
    echo "‚ùå No tasks directory found at: $TASKS_DIR"
    exit 1
  fi

  echo "üìú Available tasks:"
  for task_file in "$TASKS_DIR"/*; do
    if [ -f "$task_file" ]; then
      task_name=$(basename "$task_file")
      echo "  $task_name"
    fi
  done | sort
}

# Task runner
function run_task() {
  local task_name="$1"
  local task_file="$TASKS_DIR/$task_name"
  shift

  if [ -f "$task_file" ]; then
    # Source the task file and run the task function
    source "$task_file"

    # Convert hyphens to underscores for function names
    local func_name="task_${task_name//-/_}"
    if type -t "$func_name" &>/dev/null; then
      "$func_name" "$@"
    else
      echo "Function '$func_name' not found in task file '$task_name'"
      exit 1
    fi
  else
    printf "‚ùå Task '$task_name' not found!\n\n"
    help
    exit 1
  fi
}

if [[ -n "${CONTAINER_ID:-}" ]]; then
  printf "‚ö†Ô∏è Running in a container, some tasks might not work as intended...\n\n"
fi

# Main execution
if [ $# -eq 0 ]; then
  help
  exit 0
fi

run_task "$@"
